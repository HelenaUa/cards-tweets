{"version":3,"file":"static/js/979.1d781bf4.chunk.js","mappings":"0RAEaA,EAAeC,EAAAA,GAAAA,GAAH,gHAOZC,EAAeD,EAAAA,GAAAA,GAAH,wbAiBZE,EAAaF,EAAAA,GAAAA,EAAH,uPAcVG,EAAeH,EAAAA,GAAAA,OAAH,skBA2BZI,EAAYJ,EAAAA,GAAAA,IAAH,4QAQTK,EAAOL,EAAAA,GAAAA,IAAH,oEAKJM,EAAUN,EAAAA,GAAAA,IAAH,yEAKPO,EAAOP,EAAAA,GAAAA,IAAH,sP,wEC7EJQ,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKfC,EADS,QACgBC,eAAe,SAExCC,EADM,GACaD,eAAe,SAExC,GAAsCE,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAASH,GAAnD,eAAOM,EAAP,KAAsBC,EAAtB,MAiBAC,EAAAA,EAAAA,YAAU,WAERC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUR,IACnDK,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUN,GACtD,GAAE,CAACF,EAAaE,IAEjB,IAAMO,EAAoB,WAMtBN,EALGH,EAKc,SAAAU,GAAS,OAAIA,EAAYZ,CAAhB,EAHT,SAAAY,GAAS,OAAIA,EAAYZ,CAAhB,GAK5BG,GAAgBD,EACjB,EAgBD,OAdAI,EAAAA,EAAAA,YAAU,WAER,IAAMO,EAAoBN,aAAaO,QAAQ,eACzCC,EAAsBR,aAAaO,QAAQ,iBAC7CD,GACFV,EAAeM,KAAKO,MAAMH,IAExBE,GACFV,EAAiBI,KAAKO,MAAMD,GAE/B,GAAE,KAKD,SAAC5B,EAAD,UACGU,EAAMoB,KAAI,SAAAC,GAAI,OACb,UAAC7B,EAAD,YAEE,SAACI,EAAD,CAAM0B,I,6/BAAWC,IAAI,UACrB,SAAC1B,EAAD,CAASyB,IAAKE,EAASD,IAAI,aAC3B,SAACzB,EAAD,KAGA,SAACH,EAAD,CACI2B,IAAKD,EAAKI,OACVC,MAAO,GACPH,IAAI,YAER,UAAC9B,EAAD,WAAa4B,EAAKM,OAAlB,cACA,UAAClC,EAAD,WAAac,EAAb,iBACA,SAACb,EAAD,CAAckC,MAAO,CAAEC,WAAYxB,EAAc,UAAY,WAC3DyB,KAAK,SACLC,QAASjB,EAFX,SAGMT,EAAc,YAAc,cAjBjB2B,EAAAA,EAAAA,MADN,KAwBpB,ECjFYC,EAAiB1C,EAAAA,GAAAA,OAAH,kiB,iBC2C3B,EA9Ce,WAAO,IAAD,IAEnB,GAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAckC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAU,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAG5C,GAAwBnC,EAAAA,EAAAA,UAAS,GAAjC,eAAOoC,EAAP,KAAaC,EAAb,KAPmB,wCAUnB,WAA2BD,GAA3B,gFACEE,QAAQC,IAAIH,GADd,kBAG2BI,EAAAA,EAAAA,IAAA,iEAAoEJ,EAApE,aAH3B,OAGUK,EAHV,OAIUC,EAAYD,EAASE,KACzBb,GAAS,SAAAc,GAAU,wBAAQA,IAAR,OAAuBF,GAAvB,IALzB,gDAOEJ,QAAQC,IAAR,MAPF,yDAVmB,wBAkCjB,OALFlC,EAAAA,EAAAA,YAAU,YA7BS,oCA8BjBwC,CAAYT,EAEb,GAAE,CAACA,KAGE,4BACI,SAAC,KAAD,CAASU,GAAIb,EAAb,mBAEF,SAACtC,EAAD,CAAMC,MAAOA,KAEX,SAACiC,EAAD,CAAgBH,KAAK,SAASC,QAnBvB,WACXU,GAAQ,SAAAU,GAAQ,OAAIA,EAAW,CAAf,GACnB,EAiBO,yBAIX,C","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","pages/Tweets/Tweets.styled.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledCardUl = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 20px;\npadding: 0 16px;`\n\nexport const SlyledCardLi = styled.li`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nlist-style-type: none;\nwidth: 380px;\nheight: 460px;\npadding: 0 0 36px 0;\njustify-content: flex-end;\nalign-items: center;\nbackground-color: #5736A3;\nborder-radius: 20px;\n  &:hover {\n    background: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\n    box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  }`\n\nexport const StyledText = styled.p`\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\nmargin-left: 0;\nmargin-top: 0;\nmargin-right: 0;\nmargin-button: 8px;\n\ncolor: #EBD8FF;`  \n\nexport const StyledButton = styled.button`\ntext-transform: uppercase;\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\npadding: 14px 28px;\ngap: 6px;\nwidth: 196px;\nheight: 50px;\nmargin-top: 18px;\n\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ncolor: #373737;\n&.active {\n   background: #5CD3A8;\n   box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n   border-radius: 10.3108px;\n  }`\n\nexport const StyledImg = styled.img`\nposition: absolute;\ntop: 190px;\n// margin: 0 0 18px 0;\nborder-radius: 50%;\nborder: 8px solid #EBD8FF;\nbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;\n`  \nexport const Logo = styled.img`\nposition: absolute;\ntop: 20px;\nleft: 20px;`\n\nexport const Picture = styled.img`\nposition: absolute;\npadding: 0 36px;\ntop: 28px;`\n\nexport const Line = styled.div`\nposition: absolute;\nheight: 8px;\nwidth: 380px;\ntop: 235px;\nbackground: #ebd8ff;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n  inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;`","import { SlyledCardLi, StyledCardUl, StyledText, StyledButton, StyledImg, Logo, Picture, Line } from './Card.styled';\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n//import { useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport logo from '../../image/Logo.png';\nimport picture from '../../image/picture.png';\n\nexport const Card = ({ users }) => {\n  \n  // const [userId, setUserId] = useState(null);\n    \n  const number = 100500;\n  const formattedNumber = number.toLocaleString('en-US');\n  const one = 1;\n  const formattedOne = one.toLocaleString('en-US');\n\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [followerCount, setFollowerCount] = useState(formattedNumber);\n  \n  // const following = (id, e) => {\n  //   const userIdx = tweets.findIndex(user => user.id === id);\n\n  //   if (userId === id) {\n  //     setUserId(null);\n  //     tweets[userIdx].followers--;\n  //     return;\n  //   }\n\n  //   setUserId(id);\n  //   tweets[userIdx].followers++;\n  // };\n\n\n\n  useEffect(() => {\n    // Збереження стану кнопки та кількості фоловерів в локальному сховищі браузера при оновленні сторінки\n    localStorage.setItem('isFollowing', JSON.stringify(isFollowing));\n    localStorage.setItem('followerCount', JSON.stringify(followerCount));\n  }, [isFollowing, followerCount]);\n\n  const handleButtonClick = () => {\n    if (!isFollowing) {\n      // Збільшення кількості фоловерів на 1, якщо кнопка переходить зі стану Follow в Following\n      setFollowerCount(prevCount => prevCount + formattedOne);\n    } else {\n      // Зменшення кількості фоловерів на 1, якщо кнопка переходить зі стану Following в Follow\n      setFollowerCount(prevCount => prevCount - formattedOne);\n    }\n    setIsFollowing(!isFollowing); // Зміна значення стану при клікові на кнопку\n  }\n\n  useEffect(() => {\n    // Відновлення стану кнопки та кількості фоловерів з локального сховища браузера при завантаженні сторінки\n    const storedIsFollowing = localStorage.getItem('isFollowing');\n    const storedFollowerCount = localStorage.getItem('followerCount');\n    if (storedIsFollowing) {\n      setIsFollowing(JSON.parse(storedIsFollowing));\n    }\n    if (storedFollowerCount) {\n      setFollowerCount(JSON.parse(storedFollowerCount));\n    }\n  }, []);\n\n\n    \n  return (\n    <StyledCardUl>\n      {users.map(user => (\n        <SlyledCardLi key={nanoid()}>\n\n          <Logo src={logo} alt='logo'/>\n          <Picture src={picture} alt='picture'/>\n          <Line></Line>\n              \n          {/* <StyledText>{tweet.user}</StyledText> */}\n          <StyledImg\n              src={user.avatar}\n              width={80}\n              alt='avatar'\n          />\n          <StyledText>{user.tweets} tweets</StyledText>\n          <StyledText>{followerCount} followers</StyledText>\n          <StyledButton style={{ background: isFollowing ? '#5CD3A8' : '#EBD8FF' }}\n            type='button' \n            onClick={handleButtonClick}>\n               {isFollowing ? 'Following' : 'Follow'}\n          </StyledButton>\n        </SlyledCardLi>\n      ))}\n    </StyledCardUl>\n  );\n};\n\n// Card.propTypes = {\n//   tweets: PropTypes.array,\n// };","import styled from 'styled-components';\n\n// export const ListStyled = styled.ul`\n// margin: 0 auto;\n// padding: 25px;\n// display: flex;\n// justify-content: center;\n// flex-wrap: wrap;\n// gap:10px;\n// list-style: none;`\n\nexport const ButtonLoadMore = styled.button`\ndisplay: flex;\nmargin: 0 auto;\nwidth: 196px;\nheight: 50px;\njustify-content: center;\nalign-items: center;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ncolor: #373737;\n&.active {\n   background: #5CD3A8;\n   box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n   border-radius: 10.3108px;\n  };\n  :hover {\n        background: #5CD3A8;\n    }`","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"components/Card/Card\";\n// import { ListStyled } from \"./Tweets.styled\";\nimport { ButtonLoadMore } from \"./Tweets.styled\";\nimport { NavLink, useLocation } from 'react-router-dom';\n\n\nconst Tweets = () => {\n\n  const [users, setUsers] = useState([]);\n  const location = useLocation();\n  const goBackLink = location?.state?.from ?? \"/\";\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [limit, setLimit] = useState(3);\n  const [page, setPage] = useState(1);\n  // const [buttonVisible, setbuttonVisible] = useState(false);\n\n  async function fetchTweets(page) {\n    console.log(page);\n    try {\n      const response = await axios.get(`https://642fd9e6b289b1dec4bb7aed.mockapi.io/users?page=${page}&limit=3`);\n      const newTweets = response.data;\n        setUsers(prevTweets => [...prevTweets, ...newTweets]); \n    } catch (error) {\n    console.log(error);\n    }\n  };\n  \n  const LoadMore = () => {\n        setPage(prevPage => prevPage + 1);\n    }\n  // const LoadMore = () => {\n  //   setCurrentPage((prevPage) => prevPage + 1); \n  // };  \n      \n\n  useEffect(() => {\n    fetchTweets(page);\n     // eslint-disable-next-line\n  }, [page]);\n\n    return (\n        <div>\n            <NavLink to={goBackLink}>Back</NavLink>\n        {/* <ListStyled> */}\n          <Card users={users}/>\n            {/* </ListStyled>    */}\n            <ButtonLoadMore type=\"button\" onClick={LoadMore}>Load More</ButtonLoadMore>\n      </div>\n  \n  )\n};\n\nexport default Tweets;"],"names":["StyledCardUl","styled","SlyledCardLi","StyledText","StyledButton","StyledImg","Logo","Picture","Line","Card","users","formattedNumber","toLocaleString","formattedOne","useState","isFollowing","setIsFollowing","followerCount","setFollowerCount","useEffect","localStorage","setItem","JSON","stringify","handleButtonClick","prevCount","storedIsFollowing","getItem","storedFollowerCount","parse","map","user","src","alt","picture","avatar","width","tweets","style","background","type","onClick","nanoid","ButtonLoadMore","setUsers","location","useLocation","goBackLink","state","from","page","setPage","console","log","axios","response","newTweets","data","prevTweets","fetchTweets","to","prevPage"],"sourceRoot":""}