{"version":3,"file":"static/js/119.4263bd89.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","components/CardsList/CardsList.styled.jsx","components/CardsList/CardsList.jsx","pages/Tweets/Tweets.styled.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport picture from \"../../image/picture.png\";\n\nexport const SlyledCardLi = styled.li`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nlist-style-type: none;\nwidth: 380px;\nheight: 460px;\npadding: 0 0 36px 0;\njustify-content: flex-end;\nalign-items: center;\nbackground-color: #5736A3;\nborder-radius: 20px;\n  &:hover {\n    background: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\n    box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  }`\n\nexport const StyledText = styled.p`\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\nmargin-left: 0;\nmargin-top: 0;\nmargin-right: 0;\nmargin-button: 8px;\ncolor: #EBD8FF;`  \n\nexport const StyledButton = styled.button`\ntext-transform: uppercase;\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\npadding: 14px 28px;\ngap: 6px;\nwidth: 196px;\nheight: 50px;\nmargin-top: 18px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ncolor: #373737;\ncursor: pointer;\ntransition: scale 300ms;\n  &:hover,\n  :focus {\n    scale: 1.04;\n  };\n   &:active {\n    scale: 0.96;\n  }`\n\nexport const Logo = styled.img`\nposition: absolute;\ntop: 20px;\nleft: 20px;`\n\nexport const Picture = styled.div`\nmargin-bottom: 88px;\nwidth: 308px;\nheight: 168px;\nbackground-image: url('${picture}');\nbackground-size: cover;`\n\nexport const Line = styled.div`\nposition: absolute;\nwidth: 80px;\nheight: 80px;\ntop: 195px;\nleft: 150px;\n\n&::before {\n    content: '';\n    position: absolute;\n    width: 380px;\n    height: 8px;\n    top: 40px;\n    left: -150px;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }`\n\nexport const StyledImg = styled.img`\nposition: absolute;\ntop: -3px;\nborder-radius: 50%;\nborder: 8px solid #EBD8FF;\nbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;`  ","import { SlyledCardLi, StyledText, StyledButton, StyledImg, Logo, Picture, Line } from './Card.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../../image/Logo.png';\nimport axios from 'axios';\n\n\nexport const Card = ({ id, name, avatar, tweets, followers, isFollowing }) => {\n    \n  const [follower, setFollower] = useState(followers);\n  const [buttonFollowing, setButtonFollowing] = useState(isFollowing);\n\n  const handleButtonClick = async () => {\n    const followerCount = buttonFollowing ? follower - 1 : follower + 1;\n    const updateFollowing = !isFollowing ? true : false;\n    try {\n      await axios.put(`https://642fd9e6b289b1dec4bb7aed.mockapi.io/users/${id}`,\n        { followers: followerCount, isFollowing: updateFollowing });\n      setFollower(followerCount);\n      setButtonFollowing(!buttonFollowing);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  return (\n    <SlyledCardLi key={id} id={id}>\n\n      <Logo src={logo} alt='logo'/>\n      <Picture />\n      <Line>\n        <StyledImg src={avatar} width={80} height={80} alt={name}/>\n      </Line>\n\n      <StyledText>{tweets} tweets</StyledText>\n      <StyledText>{follower.toLocaleString('en-US', { maximumFractionDigits: 0 })} followers</StyledText>\n      \n      <StyledButton style={{ background: buttonFollowing ? '#5CD3A8' : '#EBD8FF' }} type=\"button\" onClick={handleButtonClick} >\n           {buttonFollowing ? 'Following' : 'Follow'}\n      </StyledButton>\n         \n  </SlyledCardLi>\n)\n};\n\nCard.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  tweets: PropTypes.number,\n  followers: PropTypes.number,\n  isFollowing: PropTypes.bool\n};","import styled from 'styled-components';\n\nexport const StyledTweetsUl = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 20px;\npadding: 0 16px;\nmin-height: calc(100% - 91px)`","import { Card } from \"components/Card/Card\";\nimport { StyledTweetsUl } from \"./CardsList.styled\";\n\n\nexport const CardsList = ({users}) => {\n\n    return (\n         <StyledTweetsUl>\n          {users.map(user =>\n                (<Card key={user.id}\n                        id={user.id}\n                        name={user.user}\n                        avatar={user.avatar}\n                        tweets={user.tweets}\n                        followers={user.followers}\n                        isFollowing={user.isFollowing}>\n                </Card>)\n          )}\n        </StyledTweetsUl>\n    )\n}","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(NavLink)`\ndisplay: flex;\ntext-decoration: none;\nborder: solid 1px black;\nborder-radius: 10px;\ncolor: #373737;\nbackground: #EBD8FF;\nfont-weight: 500;\nwidth: 76px;\nheight: 34px;\njustify-content: center;\nalign-items: center;\ntransition: scale 300ms;\n  :hover {\n    color: white;\n    background: #5736A3;\n    scale: 1.02;\n    }`\n\nexport const ButtonLoadMore = styled.button`\ndisplay: flex;\nmargin: 0 auto;\nwidth: 160px;\nheight: 40px;\njustify-content: center;\nalign-items: center;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ncolor: #373737;\ncursor: pointer;\ntransition: scale 300ms;\n&.active {\n    scale: 0.98;\n  };\n  :hover {\n    color: white;\n    background: #5736A3;\n    scale: 1.02;\n    }`","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CardsList } from \"components/CardsList/CardsList\";\nimport { ButtonBack, ButtonLoadMore } from \"./Tweets.styled\";\nimport { useLocation } from 'react-router-dom';\n\n\nconst Tweets = () => {\n\n  const [users, setUsers] = useState([]);\n  const [limit, setLimit] = useState(3);\n  const [buttonVisible, setbuttonVisible] = useState(false);\n\n  const location = useLocation();\n  const goBackLink = location?.state?.from ?? \"/\";\n  \n  async function fetchTweets() {\n    try {\n      const response = await axios.get(`https://642fd9e6b289b1dec4bb7aed.mockapi.io/users?page=1&limit=${limit}`);\n      setUsers(response.data);\n      setbuttonVisible(true);\n      if (limit === 15) {\n        setbuttonVisible(false);\n      }\n    } catch (error) {\n    console.log(error);\n    }\n  };\n\n  const LoadMore = () => {\n    setLimit(limit + 3);\n  };\n  \n  useEffect(() => {\n    fetchTweets(limit);\n     // eslint-disable-next-line\n  }, [limit]);\n\n    return (\n      <div>\n        <ButtonBack to={goBackLink}>Back</ButtonBack> \n\n        <CardsList users={users} />\n       \n        {buttonVisible && <ButtonLoadMore type=\"button\" onClick={LoadMore}>Load More</ButtonLoadMore>}\n      </div>\n  )\n};\n\nexport default Tweets;"],"names":["SlyledCardLi","styled","StyledText","StyledButton","Logo","Picture","picture","Line","StyledImg","Card","id","name","avatar","tweets","followers","isFollowing","useState","follower","setFollower","buttonFollowing","setButtonFollowing","handleButtonClick","followerCount","updateFollowing","axios","console","log","src","alt","width","height","toLocaleString","maximumFractionDigits","style","background","type","onClick","StyledTweetsUl","CardsList","users","map","user","ButtonBack","NavLink","ButtonLoadMore","setUsers","limit","setLimit","buttonVisible","setbuttonVisible","location","useLocation","goBackLink","state","from","response","data","useEffect","fetchTweets","to"],"sourceRoot":""}